import { jsxs as r, jsx as n } from "react/jsx-runtime";
import k from "react";
import A from "./PageSizeSelector.js";
import N from "./PaginationSummary.js";
import { Pagination as w, PaginationContent as S, PaginationItem as s, PaginationPrevious as $, PaginationNext as j, PaginationLink as m, PaginationEllipsis as p } from "../../ui/pagination.js";
import { A as I } from "../../../index-DiJ3a9ld.js";
import { m as z } from "../../../proxy-g3OKwrzk.js";
const E = ({
  currentPage: i,
  pageSize: t,
  onPageChange: c,
  onPageSizeChange: f,
  totalPages: o,
  pageSizeOptions: v,
  totalCount: x
}) => {
  const b = (a) => {
    f(a), c(1);
  }, d = (a) => {
    a >= 1 && a <= o && c(a);
  }, C = () => {
    const a = [], h = o > 5;
    if (o <= 5)
      for (let e = 1; e <= o; e++)
        a.push(
          /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
            m,
            {
              onClick: () => d(e),
              isActive: i === e,
              "aria-label": `Page ${e}`,
              "aria-current": i === e ? "page" : void 0,
              children: e
            }
          ) }, e)
        );
    else {
      a.push(
        /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
          m,
          {
            onClick: () => d(1),
            isActive: i === 1,
            "aria-label": "Page 1",
            "aria-current": i === 1 ? "page" : void 0,
            children: "1"
          }
        ) }, 1)
      ), i > 3 && h && a.push(
        /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(p, {}) }, "start-ellipsis")
      );
      const e = Math.max(2, i - 1), y = Math.min(o - 1, i + 1);
      for (let l = e; l <= y; l++)
        a.push(
          /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
            m,
            {
              onClick: () => d(l),
              isActive: i === l,
              "aria-label": `Page ${l}`,
              "aria-current": i === l ? "page" : void 0,
              children: l
            }
          ) }, l)
        );
      i < o - 2 && h && a.push(
        /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(p, {}) }, "end-ellipsis")
      ), a.push(
        /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
          m,
          {
            onClick: () => d(o),
            isActive: i === o,
            "aria-label": `Page ${o}`,
            "aria-current": i === o ? "page" : void 0,
            children: o
          }
        ) }, o)
      );
    }
    return a;
  };
  return /* @__PURE__ */ r("div", { className: "flex flex-col-reverse sm:flex-row items-center justify-between gap-4", children: [
    /* @__PURE__ */ r("div", { className: "flex items-center gap-4 text-sm", children: [
      /* @__PURE__ */ n(
        A,
        {
          pageSize: t,
          onPageSizeChange: b,
          pageSizeOptions: v
        }
      ),
      /* @__PURE__ */ n(N, { currentPage: i, pageSize: t, totalCount: x })
    ] }),
    /* @__PURE__ */ n(I, { mode: "wait", children: /* @__PURE__ */ n(
      z.div,
      {
        initial: { opacity: 0.8, y: 5 },
        animate: { opacity: 1, y: 0 },
        transition: { duration: 0.2 },
        children: /* @__PURE__ */ n(w, { className: "mx-auto sm:mx-0", children: /* @__PURE__ */ r(S, { children: [
          /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
            $,
            {
              onClick: () => d(i - 1),
              "aria-disabled": i === 1,
              tabIndex: i === 1 ? -1 : 0,
              className: i === 1 ? "pointer-events-none opacity-50" : "",
              "aria-label": "Go to previous page"
            }
          ) }),
          C(),
          /* @__PURE__ */ n(s, { children: /* @__PURE__ */ n(
            j,
            {
              onClick: () => d(i + 1),
              "aria-disabled": i === o,
              tabIndex: i === o ? -1 : 0,
              className: i === o ? "pointer-events-none opacity-50" : "",
              "aria-label": "Go to next page"
            }
          ) })
        ] }) })
      },
      i
    ) })
  ] });
}, D = k.memo(E);
export {
  D as default
};
